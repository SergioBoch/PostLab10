

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Sat May 07 19:32:23 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.40
    18                           ; Generated 17/11/2021 GMT
    19                           ; 
    20                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  000B                     _INTCONbits	set	11
   209  0018                     _RCSTAbits	set	24
   210  0006                     _PORTB	set	6
   211  0005                     _PORTA	set	5
   212  0008                     _PORTD	set	8
   213  0019                     _TXREG	set	25
   214  001A                     _RCREG	set	26
   215  000C                     _PIR1bits	set	12
   216  001E                     _ADRESH	set	30
   217  001F                     _ADCON0bits	set	31
   218  008C                     _PIE1bits	set	140
   219  009F                     _ADCON1bits	set	159
   220  009A                     _SPBRGH	set	154
   221  0099                     _SPBRG	set	153
   222  0098                     _TXSTAbits	set	152
   223  008F                     _OSCCONbits	set	143
   224  0086                     _TRISB	set	134
   225  0088                     _TRISD	set	136
   226  0085                     _TRISA	set	133
   227  0187                     _BAUDCTLbits	set	391
   228  0189                     _ANSELH	set	393
   229  0188                     _ANSEL	set	392
   230                           
   231                           	psect	strings
   232  00B4                     __pstrings:
   233  00B4                     stringtab:
   234  00B4                     __stringtab:
   235  00B4                     stringcode:	
   236                           ;	String table - string pointers are 1 byte each
   237                           
   238  00B4                     stringdir:
   239  00B4  3000               	movlw	high stringdir
   240  00B5  008A               	movwf	10
   241  00B6  0804               	movf	4,w
   242  00B7  0A84               	incf	4,f
   243  00B8  0782               	addwf	2,f
   244  00B9                     __stringbase:
   245  00B9  3400               	retlw	0
   246  00BA                     __end_of__stringtab:
   247  00BA                     STR_1:
   248  00BA  3444               	retlw	68	;'D'
   249  00BB  3445               	retlw	69	;'E'
   250  00BC  3453               	retlw	83	;'S'
   251  00BD  3445               	retlw	69	;'E'
   252  00BE  3441               	retlw	65	;'A'
   253  00BF  3420               	retlw	32	;' '
   254  00C0  344C               	retlw	76	;'L'
   255  00C1  3445               	retlw	69	;'E'
   256  00C2  3445               	retlw	69	;'E'
   257  00C3  3452               	retlw	82	;'R'
   258  00C4  3420               	retlw	32	;' '
   259  00C5  3445               	retlw	69	;'E'
   260  00C6  344C               	retlw	76	;'L'
   261  00C7  3420               	retlw	32	;' '
   262  00C8  3450               	retlw	80	;'P'
   263  00C9  344F               	retlw	79	;'O'
   264  00CA  3454               	retlw	84	;'T'
   265  00CB  3431               	retlw	49	;'1'
   266  00CC  3443               	retlw	67	;'C'
   267  00CD  3449               	retlw	73	;'I'
   268  00CE  344F               	retlw	79	;'O'
   269  00CF  344D               	retlw	77	;'M'
   270  00D0  3445               	retlw	69	;'E'
   271  00D1  3454               	retlw	84	;'T'
   272  00D2  3452               	retlw	82	;'R'
   273  00D3  344F               	retlw	79	;'O'
   274  00D4  343F               	retlw	63	;'?'
   275  00D5  3420               	retlw	32	;' '
   276  00D6  3428               	retlw	40	;'('
   277  00D7  3453               	retlw	83	;'S'
   278  00D8  3449               	retlw	73	;'I'
   279  00D9  342F               	retlw	47	;'/'
   280  00DA  344E               	retlw	78	;'N'
   281  00DB  344F               	retlw	79	;'O'
   282  00DC  3429               	retlw	41	;')'
   283  00DD  342C               	retlw	44	;','
   284  00DE  3400               	retlw	0
   285  00DF                     STR_3:
   286  00DF  3453               	retlw	83	;'S'
   287  00E0  3449               	retlw	73	;'I'
   288  00E1  342C               	retlw	44	;','
   289  00E2  3400               	retlw	0
   290  00E3                     STR_2:
   291  00E3  344E               	retlw	78	;'N'
   292  00E4  344F               	retlw	79	;'O'
   293  00E5  342C               	retlw	44	;','
   294  00E6  3400               	retlw	0
   295                           
   296                           	psect	cinit
   297  000F                     start_initialization:	
   298                           ; #config settings
   299                           
   300  000F                     __initialization:
   301                           
   302                           ; Clear objects allocated to COMMON
   303  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   304  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   305  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   306  0012                     end_of_initialization:	
   307                           ;End of C runtime variable initialization code
   308                           
   309  0012                     __end_of__initialization:
   310  0012  0183               	clrf	3
   311  0013  120A  118A  286C   	ljmp	_main	;jump to C main() function
   312                           
   313                           	psect	bssCOMMON
   314  0077                     __pbssCOMMON:
   315  0077                     _POT1:
   316  0077                     	ds	1
   317  0078                     _mensaje:
   318  0078                     	ds	1
   319  0079                     _valor:
   320  0079                     	ds	1
   321                           
   322                           	psect	cstackCOMMON
   323  0070                     __pcstackCOMMON:
   324  0070                     ?_setup:
   325  0070                     ?_text:	
   326                           ; 1 bytes @ 0x0
   327                           
   328  0070                     ?_isr:	
   329                           ; 1 bytes @ 0x0
   330                           
   331  0070                     ??_isr:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0070                     ?_main:	
   335                           ; 1 bytes @ 0x0
   336                           
   337                           
   338                           ; 1 bytes @ 0x0
   339  0070                     	ds	3
   340  0073                     ??_setup:
   341  0073                     ??_text:	
   342                           ; 1 bytes @ 0x3
   343                           
   344                           
   345                           ; 1 bytes @ 0x3
   346  0073                     	ds	1
   347  0074                     text@a:
   348                           
   349                           ; 1 bytes @ 0x4
   350  0074                     	ds	1
   351  0075                     text@msg:
   352                           
   353                           ; 1 bytes @ 0x5
   354  0075                     	ds	1
   355  0076                     ??_main:
   356                           
   357                           ; 1 bytes @ 0x6
   358  0076                     	ds	1
   359                           
   360                           	psect	maintext
   361  006C                     __pmaintext:	
   362 ;;
   363 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   364 ;;
   365 ;; *************** function _main *****************
   366 ;; Defined at:
   367 ;;		line 44 in file "main.c"
   368 ;; Parameters:    Size  Location     Type
   369 ;;		None
   370 ;; Auto vars:     Size  Location     Type
   371 ;;		None
   372 ;; Return value:  Size  Location     Type
   373 ;;                  1    wreg      void 
   374 ;; Registers used:
   375 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   376 ;; Tracked objects:
   377 ;;		On entry : B00/0
   378 ;;		On exit  : 0/0
   379 ;;		Unchanged: 0/0
   380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   381 ;;      Params:         0       0       0       0       0
   382 ;;      Locals:         0       0       0       0       0
   383 ;;      Temps:          1       0       0       0       0
   384 ;;      Totals:         1       0       0       0       0
   385 ;;Total ram usage:        1 bytes
   386 ;; Hardware stack levels required when called: 3
   387 ;; This function calls:
   388 ;;		_setup
   389 ;;		_text
   390 ;; This function is called by:
   391 ;;		Startup code after reset
   392 ;; This function uses a non-reentrant model
   393 ;;
   394                           
   395  006C                     _main:	
   396                           ;psect for function _main
   397                           
   398  006C                     l796:	
   399                           ;incstack = 0
   400                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   401                           
   402                           
   403                           ;main.c: 46:     setup();
   404  006C  120A  118A  2016  120A  118A  	fcall	_setup
   405  0071  2884               	goto	l806
   406  0072                     l798:
   407                           
   408                           ;main.c: 49:         TXREG=0X0D;
   409  0072  300D               	movlw	13
   410  0073  1283               	bcf	3,5	;RP0=0, select bank0
   411  0074  1303               	bcf	3,6	;RP1=0, select bank0
   412  0075  0099               	movwf	25	;volatile
   413  0076                     l800:
   414                           
   415                           ;main.c: 50:         text("DESEA LEER EL POT1CIOMETRO? (SI/NO),");
   416  0076  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   417  0077  120A  118A  20E7  120A  118A  	fcall	_text
   418  007C                     l802:
   419                           
   420                           ;main.c: 51:         TXREG=0X0D;
   421  007C  300D               	movlw	13
   422  007D  1283               	bcf	3,5	;RP0=0, select bank0
   423  007E  1303               	bcf	3,6	;RP1=0, select bank0
   424  007F  0099               	movwf	25	;volatile
   425  0080                     l804:
   426                           
   427                           ;main.c: 52:         valor++;
   428  0080  3001               	movlw	1
   429  0081  00F6               	movwf	??_main
   430  0082  0876               	movf	??_main,w
   431  0083  07F9               	addwf	_valor,f
   432  0084                     l806:
   433                           
   434                           ;main.c: 48:         while (valor==0){
   435  0084  0879               	movf	_valor,w
   436  0085  1903               	btfsc	3,2
   437  0086  2888               	goto	u91
   438  0087  2889               	goto	u90
   439  0088                     u91:
   440  0088  2872               	goto	l798
   441  0089                     u90:
   442  0089                     l808:
   443                           
   444                           ;main.c: 54:         if (mensaje=='N'){
   445  0089  304E               	movlw	78
   446  008A  0678               	xorwf	_mensaje,w
   447  008B  1D03               	btfss	3,2
   448  008C  288E               	goto	u101
   449  008D  288F               	goto	u100
   450  008E                     u101:
   451  008E  2897               	goto	l816
   452  008F                     u100:
   453  008F                     l810:
   454                           
   455                           ;main.c: 55:             text("NO,");
   456  008F  302A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   457  0090  120A  118A  20E7  120A  118A  	fcall	_text
   458  0095                     l812:
   459                           
   460                           ;main.c: 56:             valor=0;
   461  0095  01F9               	clrf	_valor
   462  0096                     l814:
   463                           
   464                           ;main.c: 57:             mensaje=0;}
   465  0096  01F8               	clrf	_mensaje
   466  0097                     l816:
   467                           
   468                           ;main.c: 58:         if (mensaje=='S'){
   469  0097  3053               	movlw	83
   470  0098  0678               	xorwf	_mensaje,w
   471  0099  1D03               	btfss	3,2
   472  009A  289C               	goto	u111
   473  009B  289D               	goto	u110
   474  009C                     u111:
   475  009C  28A9               	goto	l826
   476  009D                     u110:
   477  009D                     l818:
   478                           
   479                           ;main.c: 59:             text("SI,");
   480  009D  3026               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   481  009E  120A  118A  20E7  120A  118A  	fcall	_text
   482  00A3                     l820:
   483                           
   484                           ;main.c: 60:             PORTD=POT1;
   485  00A3  0877               	movf	_POT1,w
   486  00A4  1283               	bcf	3,5	;RP0=0, select bank0
   487  00A5  1303               	bcf	3,6	;RP1=0, select bank0
   488  00A6  0088               	movwf	8	;volatile
   489  00A7                     l822:
   490                           
   491                           ;main.c: 61:             valor=0;
   492  00A7  01F9               	clrf	_valor
   493  00A8                     l824:
   494                           
   495                           ;main.c: 62:             mensaje=0;}
   496  00A8  01F8               	clrf	_mensaje
   497  00A9                     l826:
   498                           
   499                           ;main.c: 63:         if(ADCON0bits.GO == 0){
   500  00A9  1283               	bcf	3,5	;RP0=0, select bank0
   501  00AA  1303               	bcf	3,6	;RP1=0, select bank0
   502  00AB  189F               	btfsc	31,1	;volatile
   503  00AC  28AE               	goto	u121
   504  00AD  28AF               	goto	u120
   505  00AE                     u121:
   506  00AE  2884               	goto	l806
   507  00AF                     u120:
   508  00AF                     l828:
   509                           
   510                           ;main.c: 64:        ADCON0bits.GO = 1;}
   511  00AF  149F               	bsf	31,1	;volatile
   512  00B0  2884               	goto	l806
   513  00B1  120A  118A  280C   	ljmp	start
   514  00B4                     __end_of_main:
   515                           
   516                           	psect	text1
   517  00E7                     __ptext1:	
   518 ;; *************** function _text *****************
   519 ;; Defined at:
   520 ;;		line 68 in file "main.c"
   521 ;; Parameters:    Size  Location     Type
   522 ;;  msg             1    wreg     PTR unsigned char 
   523 ;;		 -> STR_3(4), STR_2(4), STR_1(37), 
   524 ;; Auto vars:     Size  Location     Type
   525 ;;  msg             1    5[COMMON] PTR unsigned char 
   526 ;;		 -> STR_3(4), STR_2(4), STR_1(37), 
   527 ;;  a               1    4[COMMON] unsigned char 
   528 ;; Return value:  Size  Location     Type
   529 ;;                  1    wreg      void 
   530 ;; Registers used:
   531 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   532 ;; Tracked objects:
   533 ;;		On entry : 0/0
   534 ;;		On exit  : 0/0
   535 ;;		Unchanged: 0/0
   536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   537 ;;      Params:         0       0       0       0       0
   538 ;;      Locals:         2       0       0       0       0
   539 ;;      Temps:          1       0       0       0       0
   540 ;;      Totals:         3       0       0       0       0
   541 ;;Total ram usage:        3 bytes
   542 ;; Hardware stack levels used: 2
   543 ;; Hardware stack levels required when called: 1
   544 ;; This function calls:
   545 ;;		Nothing
   546 ;; This function is called by:
   547 ;;		_main
   548 ;; This function uses a non-reentrant model
   549 ;;
   550                           
   551  00E7                     _text:	
   552                           ;psect for function _text
   553                           
   554                           
   555                           ;incstack = 0
   556                           ; Regs used in _text: [wreg-fsr0h+status,2+status,0+pclath]
   557                           ;text@msg stored from wreg
   558  00E7  00F5               	movwf	text@msg
   559  00E8                     l786:
   560                           
   561                           ;main.c: 69:     uint8_t a=0;
   562  00E8  01F4               	clrf	text@a
   563                           
   564                           ;main.c: 70:         while(msg[a]!=','){
   565  00E9  28FE               	goto	l794
   566  00EA                     l788:
   567                           
   568                           ;main.c: 71:             TXREG = msg[a];
   569  00EA  0874               	movf	text@a,w
   570  00EB  0775               	addwf	text@msg,w
   571  00EC  0084               	movwf	4
   572  00ED  120A  118A  20B4  120A  118A  	fcall	stringdir
   573  00F2  1283               	bcf	3,5	;RP0=0, select bank0
   574  00F3  1303               	bcf	3,6	;RP1=0, select bank0
   575  00F4  0099               	movwf	25	;volatile
   576  00F5                     l790:
   577                           
   578                           ;main.c: 72:             a++;
   579  00F5  3001               	movlw	1
   580  00F6  00F3               	movwf	??_text
   581  00F7  0873               	movf	??_text,w
   582  00F8  07F4               	addwf	text@a,f
   583  00F9                     l792:
   584                           
   585                           ;main.c: 74:             _delay((unsigned long)((900)*(1000000/4000000.0)));
   586  00F9  304A               	movlw	74
   587  00FA  00F3               	movwf	??_text
   588  00FB                     u137:
   589  00FB  0BF3               	decfsz	??_text,f
   590  00FC  28FB               	goto	u137
   591  00FD  28FE               	nop2
   592  00FE                     l794:
   593                           
   594                           ;main.c: 70:         while(msg[a]!=','){
   595  00FE  0874               	movf	text@a,w
   596  00FF  0775               	addwf	text@msg,w
   597  0100  0084               	movwf	4
   598  0101  120A  118A  20B4  120A  118A  	fcall	stringdir
   599  0106  3A2C               	xorlw	44
   600  0107  1D03               	skipz
   601  0108  290A               	goto	u81
   602  0109  290B               	goto	u80
   603  010A                     u81:
   604  010A  28EA               	goto	l788
   605  010B                     u80:
   606  010B                     l83:
   607  010B  0008               	return
   608  010C                     __end_of_text:
   609                           
   610                           	psect	text2
   611  0016                     __ptext2:	
   612 ;; *************** function _setup *****************
   613 ;; Defined at:
   614 ;;		line 79 in file "main.c"
   615 ;; Parameters:    Size  Location     Type
   616 ;;		None
   617 ;; Auto vars:     Size  Location     Type
   618 ;;		None
   619 ;; Return value:  Size  Location     Type
   620 ;;                  1    wreg      void 
   621 ;; Registers used:
   622 ;;		wreg, status,2, status,0
   623 ;; Tracked objects:
   624 ;;		On entry : 0/0
   625 ;;		On exit  : 0/0
   626 ;;		Unchanged: 0/0
   627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   628 ;;      Params:         0       0       0       0       0
   629 ;;      Locals:         0       0       0       0       0
   630 ;;      Temps:          1       0       0       0       0
   631 ;;      Totals:         1       0       0       0       0
   632 ;;Total ram usage:        1 bytes
   633 ;; Hardware stack levels used: 1
   634 ;; Hardware stack levels required when called: 1
   635 ;; This function calls:
   636 ;;		Nothing
   637 ;; This function is called by:
   638 ;;		_main
   639 ;; This function uses a non-reentrant model
   640 ;;
   641                           
   642  0016                     _setup:	
   643                           ;psect for function _setup
   644                           
   645  0016                     l678:	
   646                           ;incstack = 0
   647                           ; Regs used in _setup: [wreg+status,2+status,0]
   648                           
   649                           
   650                           ;main.c: 80:     ANSEL = 1;
   651  0016  3001               	movlw	1
   652  0017  1683               	bsf	3,5	;RP0=1, select bank3
   653  0018  1703               	bsf	3,6	;RP1=1, select bank3
   654  0019  0088               	movwf	8	;volatile
   655  001A                     l680:
   656                           
   657                           ;main.c: 81:     ANSELH = 0x00;
   658  001A  0189               	clrf	9	;volatile
   659  001B                     l682:
   660                           
   661                           ;main.c: 82:     TRISA = 1;
   662  001B  3001               	movlw	1
   663  001C  1683               	bsf	3,5	;RP0=1, select bank1
   664  001D  1303               	bcf	3,6	;RP1=0, select bank1
   665  001E  0085               	movwf	5	;volatile
   666                           
   667                           ;main.c: 83:     PORTA = 0x00;
   668  001F  1283               	bcf	3,5	;RP0=0, select bank0
   669  0020  1303               	bcf	3,6	;RP1=0, select bank0
   670  0021  0185               	clrf	5	;volatile
   671                           
   672                           ;main.c: 84:     TRISD= 0x00;
   673  0022  1683               	bsf	3,5	;RP0=1, select bank1
   674  0023  1303               	bcf	3,6	;RP1=0, select bank1
   675  0024  0188               	clrf	8	;volatile
   676                           
   677                           ;main.c: 85:     PORTD= 0x00;
   678  0025  1283               	bcf	3,5	;RP0=0, select bank0
   679  0026  1303               	bcf	3,6	;RP1=0, select bank0
   680  0027  0188               	clrf	8	;volatile
   681                           
   682                           ;main.c: 86:     TRISB= 0x00;
   683  0028  1683               	bsf	3,5	;RP0=1, select bank1
   684  0029  1303               	bcf	3,6	;RP1=0, select bank1
   685  002A  0186               	clrf	6	;volatile
   686                           
   687                           ;main.c: 87:     PORTB= 0x00;
   688  002B  1283               	bcf	3,5	;RP0=0, select bank0
   689  002C  1303               	bcf	3,6	;RP1=0, select bank0
   690  002D  0186               	clrf	6	;volatile
   691  002E                     l684:
   692                           
   693                           ;main.c: 89:     OSCCONbits.IRCF = 0b100;
   694  002E  1683               	bsf	3,5	;RP0=1, select bank1
   695  002F  1303               	bcf	3,6	;RP1=0, select bank1
   696  0030  080F               	movf	15,w	;volatile
   697  0031  398F               	andlw	-113
   698  0032  3840               	iorlw	64
   699  0033  008F               	movwf	15	;volatile
   700  0034                     l686:
   701                           
   702                           ;main.c: 90:     OSCCONbits.SCS = 1;
   703  0034  140F               	bsf	15,0	;volatile
   704  0035                     l688:
   705                           
   706                           ;main.c: 91:     TXSTAbits.SYNC = 0;
   707  0035  1218               	bcf	24,4	;volatile
   708  0036                     l690:
   709                           
   710                           ;main.c: 92:     TXSTAbits.BRGH = 1;
   711  0036  1518               	bsf	24,2	;volatile
   712  0037                     l692:
   713                           
   714                           ;main.c: 93:     BAUDCTLbits.BRG16 = 1;
   715  0037  1683               	bsf	3,5	;RP0=1, select bank3
   716  0038  1703               	bsf	3,6	;RP1=1, select bank3
   717  0039  1587               	bsf	7,3	;volatile
   718  003A                     l694:
   719                           
   720                           ;main.c: 95:     SPBRG = 25;
   721  003A  3019               	movlw	25
   722  003B  1683               	bsf	3,5	;RP0=1, select bank1
   723  003C  1303               	bcf	3,6	;RP1=0, select bank1
   724  003D  0099               	movwf	25	;volatile
   725  003E                     l696:
   726                           
   727                           ;main.c: 96:     SPBRGH = 0;
   728  003E  019A               	clrf	26	;volatile
   729  003F                     l698:
   730                           
   731                           ;main.c: 98:     RCSTAbits.SPEN = 1;
   732  003F  1283               	bcf	3,5	;RP0=0, select bank0
   733  0040  1303               	bcf	3,6	;RP1=0, select bank0
   734  0041  1798               	bsf	24,7	;volatile
   735  0042                     l700:
   736                           
   737                           ;main.c: 99:     TXSTAbits.TX9 = 0;
   738  0042  1683               	bsf	3,5	;RP0=1, select bank1
   739  0043  1303               	bcf	3,6	;RP1=0, select bank1
   740  0044  1318               	bcf	24,6	;volatile
   741  0045                     l702:
   742                           
   743                           ;main.c: 100:     TXSTAbits.TXEN = 1;
   744  0045  1698               	bsf	24,5	;volatile
   745  0046                     l704:
   746                           
   747                           ;main.c: 101:     RCSTAbits.CREN = 1;
   748  0046  1283               	bcf	3,5	;RP0=0, select bank0
   749  0047  1303               	bcf	3,6	;RP1=0, select bank0
   750  0048  1618               	bsf	24,4	;volatile
   751  0049                     l706:
   752                           
   753                           ;main.c: 103:     ADCON0bits.ADCS = 0b01;
   754  0049  081F               	movf	31,w	;volatile
   755  004A  393F               	andlw	-193
   756  004B  3840               	iorlw	64
   757  004C  009F               	movwf	31	;volatile
   758  004D                     l708:
   759                           
   760                           ;main.c: 104:     ADCON1bits.VCFG0 = 0;
   761  004D  1683               	bsf	3,5	;RP0=1, select bank1
   762  004E  1303               	bcf	3,6	;RP1=0, select bank1
   763  004F  121F               	bcf	31,4	;volatile
   764  0050                     l710:
   765                           
   766                           ;main.c: 105:     ADCON1bits.VCFG1 = 0;
   767  0050  129F               	bcf	31,5	;volatile
   768  0051                     l712:
   769                           
   770                           ;main.c: 106:     ADCON0bits.CHS = 0b0000;
   771  0051  30C3               	movlw	-61
   772  0052  1283               	bcf	3,5	;RP0=0, select bank0
   773  0053  1303               	bcf	3,6	;RP1=0, select bank0
   774  0054  059F               	andwf	31,f	;volatile
   775  0055                     l714:
   776                           
   777                           ;main.c: 107:     ADCON1bits.ADFM = 0;
   778  0055  1683               	bsf	3,5	;RP0=1, select bank1
   779  0056  1303               	bcf	3,6	;RP1=0, select bank1
   780  0057  139F               	bcf	31,7	;volatile
   781  0058                     l716:
   782                           
   783                           ;main.c: 108:     ADCON0bits.ADON = 1;
   784  0058  1283               	bcf	3,5	;RP0=0, select bank0
   785  0059  1303               	bcf	3,6	;RP1=0, select bank0
   786  005A  141F               	bsf	31,0	;volatile
   787  005B                     l718:
   788                           
   789                           ;main.c: 109:     _delay((unsigned long)((60)*(1000000/4000000.0)));
   790  005B  3004               	movlw	4
   791  005C  00F3               	movwf	??_setup
   792  005D                     u147:
   793  005D  0BF3               	decfsz	??_setup,f
   794  005E  285D               	goto	u147
   795  005F  2860               	nop2
   796  0060                     l720:
   797                           
   798                           ;main.c: 110:     INTCONbits.GIE = 1;
   799  0060  178B               	bsf	11,7	;volatile
   800  0061                     l722:
   801                           
   802                           ;main.c: 111:     INTCONbits.PEIE = 1;
   803  0061  170B               	bsf	11,6	;volatile
   804  0062                     l724:
   805                           
   806                           ;main.c: 112:     PIE1bits.RCIE = 1;
   807  0062  1683               	bsf	3,5	;RP0=1, select bank1
   808  0063  1303               	bcf	3,6	;RP1=0, select bank1
   809  0064  168C               	bsf	12,5	;volatile
   810  0065                     l726:
   811                           
   812                           ;main.c: 113:     PIR1bits.ADIF = 0;
   813  0065  1283               	bcf	3,5	;RP0=0, select bank0
   814  0066  1303               	bcf	3,6	;RP1=0, select bank0
   815  0067  130C               	bcf	12,6	;volatile
   816  0068                     l728:
   817                           
   818                           ;main.c: 114:     PIE1bits.ADIE = 1;
   819  0068  1683               	bsf	3,5	;RP0=1, select bank1
   820  0069  1303               	bcf	3,6	;RP1=0, select bank1
   821  006A  170C               	bsf	12,6	;volatile
   822  006B                     l86:
   823  006B  0008               	return
   824  006C                     __end_of_setup:
   825                           
   826                           	psect	text3
   827  010C                     __ptext3:	
   828 ;; *************** function _isr *****************
   829 ;; Defined at:
   830 ;;		line 34 in file "main.c"
   831 ;; Parameters:    Size  Location     Type
   832 ;;		None
   833 ;; Auto vars:     Size  Location     Type
   834 ;;		None
   835 ;; Return value:  Size  Location     Type
   836 ;;                  1    wreg      void 
   837 ;; Registers used:
   838 ;;		wreg, status,2, status,0
   839 ;; Tracked objects:
   840 ;;		On entry : 0/0
   841 ;;		On exit  : 0/0
   842 ;;		Unchanged: 0/0
   843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   844 ;;      Params:         0       0       0       0       0
   845 ;;      Locals:         0       0       0       0       0
   846 ;;      Temps:          3       0       0       0       0
   847 ;;      Totals:         3       0       0       0       0
   848 ;;Total ram usage:        3 bytes
   849 ;; Hardware stack levels used: 1
   850 ;; This function calls:
   851 ;;		Nothing
   852 ;; This function is called by:
   853 ;;		Interrupt level 1
   854 ;; This function uses a non-reentrant model
   855 ;;
   856                           
   857  010C                     _isr:	
   858                           ;psect for function _isr
   859                           
   860  010C                     i1l740:
   861                           
   862                           ;main.c: 35:     if(ADCON0bits.CHS == 0){
   863  010C  1283               	bcf	3,5	;RP0=0, select bank0
   864  010D  1303               	bcf	3,6	;RP1=0, select bank0
   865  010E  0C1F               	rrf	31,w	;volatile
   866  010F  00F0               	movwf	??_isr
   867  0110  0C70               	rrf	??_isr,w
   868  0111  390F               	andlw	15
   869  0112  3A00               	xorlw	0
   870  0113  1D03               	skipz
   871  0114  2916               	goto	u2_21
   872  0115  2917               	goto	u2_20
   873  0116                     u2_21:
   874  0116  291C               	goto	i1l746
   875  0117                     u2_20:
   876  0117                     i1l742:
   877                           
   878                           ;main.c: 36:             POT1 = ADRESH;
   879  0117  081E               	movf	30,w	;volatile
   880  0118  00F0               	movwf	??_isr
   881  0119  0870               	movf	??_isr,w
   882  011A  00F7               	movwf	_POT1
   883  011B                     i1l744:
   884                           
   885                           ;main.c: 37:         PIR1bits.ADIF = 0; }
   886  011B  130C               	bcf	12,6	;volatile
   887  011C                     i1l746:
   888                           
   889                           ;main.c: 38:     if(PIR1bits.RCIF){
   890  011C  1E8C               	btfss	12,5	;volatile
   891  011D  291F               	goto	u3_21
   892  011E  2920               	goto	u3_20
   893  011F                     u3_21:
   894  011F  2924               	goto	i1l63
   895  0120                     u3_20:
   896  0120                     i1l748:
   897                           
   898                           ;main.c: 39:         mensaje= RCREG;
   899  0120  081A               	movf	26,w	;volatile
   900  0121  00F0               	movwf	??_isr
   901  0122  0870               	movf	??_isr,w
   902  0123  00F8               	movwf	_mensaje
   903  0124                     i1l63:
   904  0124  0872               	movf	??_isr+2,w
   905  0125  008A               	movwf	10
   906  0126  0E71               	swapf	??_isr+1,w
   907  0127  0083               	movwf	3
   908  0128  0EFE               	swapf	btemp,f
   909  0129  0E7E               	swapf	btemp,w
   910  012A  0009               	retfie
   911  012B                     __end_of_isr:
   912  007E                     btemp	set	126	;btemp
   913  007E                     wtemp0	set	126
   914                           
   915                           	psect	intentry
   916  0004                     __pintentry:	
   917                           ;incstack = 0
   918                           ; Regs used in _isr: [wreg+status,2+status,0]
   919                           
   920  0004                     interrupt_function:
   921  007E                     saved_w	set	btemp
   922  0004  00FE               	movwf	btemp
   923  0005  0E03               	swapf	3,w
   924  0006  00F1               	movwf	??_isr+1
   925  0007  080A               	movf	10,w
   926  0008  00F2               	movwf	??_isr+2
   927  0009  120A  118A  290C   	ljmp	_isr
   928                           
   929                           	psect	idloc
   930                           
   931                           ;Config register IDLOC0 @ 0x2000
   932                           ;	unspecified, using default values
   933  2000                     	org	8192
   934  2000  3FFF               	dw	16383
   935                           
   936                           ;Config register IDLOC1 @ 0x2001
   937                           ;	unspecified, using default values
   938  2001                     	org	8193
   939  2001  3FFF               	dw	16383
   940                           
   941                           ;Config register IDLOC2 @ 0x2002
   942                           ;	unspecified, using default values
   943  2002                     	org	8194
   944  2002  3FFF               	dw	16383
   945                           
   946                           ;Config register IDLOC3 @ 0x2003
   947                           ;	unspecified, using default values
   948  2003                     	org	8195
   949  2003  3FFF               	dw	16383
   950                           
   951                           	psect	config
   952                           
   953                           ;Config register CONFIG1 @ 0x2007
   954                           ;	Oscillator Selection bits
   955                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   956                           ;	Watchdog Timer Enable bit
   957                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   958                           ;	Power-up Timer Enable bit
   959                           ;	PWRTE = OFF, PWRT disabled
   960                           ;	RE3/MCLR pin function select bit
   961                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   962                           ;	Code Protection bit
   963                           ;	CP = OFF, Program memory code protection is disabled
   964                           ;	Data Code Protection bit
   965                           ;	CPD = OFF, Data memory code protection is disabled
   966                           ;	Brown Out Reset Selection bits
   967                           ;	BOREN = OFF, BOR disabled
   968                           ;	Internal External Switchover bit
   969                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   970                           ;	Fail-Safe Clock Monitor Enabled bit
   971                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   972                           ;	Low Voltage Programming Enable bit
   973                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   974                           ;	In-Circuit Debugger Mode bit
   975                           ;	DEBUG = 0x1, unprogrammed default
   976  2007                     	org	8199
   977  2007  20D4               	dw	8404
   978                           
   979                           ;Config register CONFIG2 @ 0x2008
   980                           ;	Brown-out Reset Selection bit
   981                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   982                           ;	Flash Program Memory Self Write Enable bits
   983                           ;	WRT = OFF, Write protection off
   984  2008                     	org	8200
   985  2008  3FFF               	dw	16383

Data Sizes:
    Strings     45
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    text@msg	PTR unsigned char  size(1) Largest target is 37
		 -> STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[37]), 


Critical Paths under _main in COMMON

    _main->_text

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     189
                                              6 COMMON     1     1      0
                              _setup
                               _text
 ---------------------------------------------------------------------------------
 (2) _text                                                 3     3      0     189
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
   _text

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Sat May 07 19:32:23 2022

                      pc 0002                       l83 010B                       l86 006B  
                     u80 010B                       u81 010A                       u90 0089  
                     u91 0088                       fsr 0004                      l700 0042  
                    l710 0050                      l702 0045                      l720 0060  
                    l712 0051                      l704 0046                      l800 0076  
                    l722 0061                      l714 0055                      l706 0049  
                    l810 008F                      l802 007C                      l724 0062  
                    l716 0058                      l708 004D                      l820 00A3  
                    l812 0095                      l804 0080                      l726 0065  
                    l718 005B                      l822 00A7                      l814 0096  
                    l806 0084                      l728 0068                      l680 001A  
                    l824 00A8                      l816 0097                      l808 0089  
                    l690 0036                      l682 001B                      l818 009D  
                    l826 00A9                      l692 0037                      l684 002E  
                    l828 00AF                      l694 003A                      l686 0034  
                    l678 0016                      l790 00F5                      l696 003E  
                    l688 0035                      l792 00F9                      l698 003F  
                    l794 00FE                      l786 00E8                      l788 00EA  
                    l796 006C                      l798 0072                      u100 008F  
                    u101 008E                      u110 009D                      u111 009C  
                    u120 00AF                      u121 00AE                      u137 00FB  
                    u147 005D                      _isr 010C                      fsr0 0004  
                   ?_isr 0070                     STR_1 00BA                     STR_2 00E3  
                   STR_3 00DF                     i1l63 0124                     _POT1 0077  
                   u2_20 0117                     u2_21 0116                     u3_20 0120  
                   u3_21 011F                     _main 006C                     _text 00E7  
                   btemp 007E                     start 000C                    ??_isr 0070  
                  ?_main 0070                    ?_text 0070                    _ANSEL 0188  
                  i1l740 010C                    i1l742 0117                    i1l744 011B  
                  i1l746 011C                    i1l748 0120                    _RCREG 001A  
                  _SPBRG 0099                    _PORTA 0005                    _PORTB 0006  
                  _PORTD 0008                    _TRISA 0085                    _TRISB 0086  
                  _TRISD 0088                    _TXREG 0019                    _valor 0079  
                  _setup 0016                    pclath 000A                    text@a 0074  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 00B4             __end_of_text 010C                   ??_main 0076  
                 ??_text 0073                   _ADRESH 001E                   ?_setup 0070  
                 _ANSELH 0189                   _SPBRGH 009A                   saved_w 007E  
__end_of__initialization 0012           __pcstackCOMMON 0070            __end_of_setup 006C  
                ??_setup 0073               __pmaintext 006C               __pintentry 0004  
             __stringtab 00B4                  __ptext1 00E7                  __ptext2 0016  
                __ptext3 010C                  _mensaje 0078     end_of_initialization 0012  
                text@msg 0075                _RCSTAbits 0018                _TXSTAbits 0098  
            _BAUDCTLbits 0187      start_initialization 000F              __end_of_isr 012B  
            __pbssCOMMON 0077                ___latbits 0002                __pstrings 00B4  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
             _ADCON0bits 001F              __stringbase 00B9               _ADCON1bits 009F  
     __end_of__stringtab 00BA               _INTCONbits 000B                 intlevel1 0000  
              stringcode 00B4               _OSCCONbits 008F                 stringdir 00B4  
               stringtab 00B4  
